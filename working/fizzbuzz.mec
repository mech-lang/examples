Fizz Buzz
==========

The Fizz Buzz problem is a simple programming exercise that involves printing numbers from 1 to 100, but with a twist. For multiples of 3, print "Fizz" instead of the number, for multiples of 5 print "Buzz", and for numbers that are multiples of both 3 and 5, print "FizzBuzz". This is a common exercise in programming interviews to test a candidate's understanding of control flow and basic programming concepts.

In most imperative progrmaming languages you'd solve FizzBuzz like this:

```
for i in 1..100 {
    if (i % 3 == 0 && i % 5 == 0) {
        print("FizzBuzz");
    } else if (i % 3 == 0) {
        print("Fizz");
    } else if (i % 5 == 0) {
        print("Buzz");
    } else {
        print(i);
    }
}
```

But in Mech we can achieve this in a more concise way. First get a vector of numbers from 1 to 100:

  x := 1..=1000
  ~y<[string]> := 1..=1000

then replace the values based on the conditions specified using a feature called "logical indexing", which allows us to directly manipulate elements of a vector based on conditions. Broadcast operators allow us to apply operations across entire vectors without the need for explicit loops.

  y[(x % 3) == 0] = "‚ú®"
  y[(x % 5) == 0] = "üêù"
  y[((x % 5) == 0 & (x % 3) == 0)] = "‚ú®üêù"
  
Then we can print them all out at once:

```mec
  y'
```