# N-Body Simulation

## Preliminaries

Set up the constants and initial conditions.

Constants
  #days-per-year = 365.24
  #π = 3.141592654
  #nbodies = 5
  #ix1 = [1; 1; 1; 1; 2; 2; 2; 3; 3; 4]
  #ix2 = [2; 3; 4; 5; 3; 4; 5; 4; 5; 5]   

Define solar mass
  #solar-mass = 4 * #π * #π

Define the planets
  jupiter = [4.84143144246472090, -1.16032004402742839, -0.103622044471123109, 0.00166007664274403694 * #days-per-year, 0.00769901118419740425 * #days-per-year, -0.0000690460016972063023 * #days-per-year, 0.000954791938424326609 * #solar-mass]
  saturn  = [8.34336671824457987, 4.12479856412430479, -0.403523417114321381, -0.00276742510726862411 * #days-per-year, 0.00499852801234917238 * #days-per-year, 0.0000230417297573763929 * #days-per-year, 0.000285885980666130812 * #solar-mass]
  uranus = [12.8943695621391310, -15.1111514016986312, -0.223307578892655734, 0.00296460137564761618 * #days-per-year, 0.00237847173959480950 * #days-per-year, -0.0000296589568540237556 * #days-per-year, 0.0000436624404335156298 * #solar-mass]
  neptune = [15.3796971148509165, -25.9193146099879641, 0.179258772950371181, 0.00268067772490389322 * #days-per-year, 0.00162824170038242295 * #days-per-year, -0.000095159225451971587 * #days-per-year, 0.0000515138902046611451 * #solar-mass]
  #b = [|x y z vx vy vz mass|
         0 0 0 0  0  0  #solar-mass
         jupiter
         saturn
         uranus
         neptune]
  #dt = 0.01

## Momentum Offset

energy
  e1 = 0.5 * #b.mass * (#b.vx ^ 2 + #b.vy ^ 2 + #b.vz ^ 2)
  ep = stats/sum(column: e1)
  e2 = #masses-squared / #distance
  em = stats/sum(column: e2)
  #energy = ep - em

differences
  dx1 = #b.x{#ix1}
  dx2 = #b.x{#ix2}
  dy1 = #b.y{#ix1}
  dy2 = #b.y{#ix2}
  dz1 = #b.z{#ix1}
  dz2 = #b.z{#ix2}
  #Δ = [
    x: dx1 - dx2
    y: dy1 - dy2
    z: dz1 - dz2
  ]
  m1 = #b.mass{#ix1}
  m2 = #b.mass{#ix2}
  #masses-squared = m1 * m2

offset momentum
  p = [#b.vx * #b.mass, #b.vy * #b.mass, #b.vz * #b.mass]
  ps = stats/sum(column: p)
  offset = ps / -#solar-mass
  #b.vx{1} := offset{1}
  #b.vy{1} := offset{2}
  #b.vz{1} := offset{3}

distance
  #distance = (#Δ.x ^ 2 + #Δ.y ^ 2 + #Δ.z ^ 2) ^ 0.5

# Advance

advance velocities
  mag = #dt / #distance ^ 3
  b2-mass = #b.mass{#ix2}
  b1-mass = #b.mass{#ix1}
  b1-vx = #b.vx{#ix1}
  b1-vy = #b.vy{#ix1}
  b1-vz = #b.vz{#ix1}
  #b.vx{#ix1} := b1-vx - #Δ.x * b2-mass * mag
  #b.vy{#ix1} := b1-vy - #Δ.y * b2-mass * mag
  #b.vz{#ix1} := b1-vz - #Δ.z * b2-mass * mag
  #b.vx{#ix2} := b1-vx + #Δ.x * b1-mass * mag
  #b.vy{#ix2} := b1-vy + #Δ.y * b1-mass * mag
  #b.vz{#ix2} := b1-vz + #Δ.z * b1-mass * mag

advance positions
  #b.x := #b.x + #b.vx * #dt
  #b.y := #b.y + #b.vy * #dt
  #b.z := #b.z + #b.vz * #dt