# Pong

Game elements
  #pong/game = [width: 1000 height: 500]
  #pong/ball = [x: 500 y: 250 vx: 5 vy: 5]
  #pong/paddles = [|x   y|
                    50  250
                    940 300]
  #pong/score = [left: 0 right: 0]

Add a game timer
  #time/timer += [period: 16]

Alias the timers
  #pong/ticks = #time/timer.ticks{1}

## Movement

Move the ball with every tick of the timer
  ~ #pong/ticks
  #pong/ball.x := #pong/ball.x + #pong/ball.vx
  #pong/ball.y := #pong/ball.y + #pong/ball.vy

### Game Boundary Interactions

Bounce right
  ix = #pong/ball.x > (#pong/game.width - 15)
  #pong/ball.vx{ix} := -#pong/ball.vx
  #pong/ball.x{ix} := #pong/game.width - 15
  #pong/score.right{ix} := #pong/score.right + 1

Bounce left
  ix = #pong/ball.x < 15
  #pong/ball.vx{ix} := -#pong/ball.vx
  #pong/ball.x{ix} := 15
  #pong/score.left{ix} := #pong/score.left + 1

Bounce bottom
  ix = #pong/ball.y > (#pong/game.height - 15)
  #pong/ball.vy{ix} := -#pong/ball.vy
  #pong/ball.y{ix} := #pong/game.height - 15
  
Bounce top
  ix = #pong/ball.y < 15
  #pong/ball.vy{ix} := -#pong/ball.vy
  #pong/ball.y{ix} := 15

### Paddle Interactions

Map player position to paddle position. The player position comes from the client.
  #pong/paddles.y := #pong/players.position

Bounce the ball off the left paddle
  ix = #pong/ball.x < (#pong/paddles.x{1} + 20)
  iy = (#pong/ball.y > (#pong/paddles.y{1} - 50)) & (#pong/ball.y < (#pong/paddles.y{1} + 50))
  #pong/ball.vx{ix & iy} := -#pong/ball.vx
  #pong/ball.x{ix & iy} := #pong/paddles.x{1} + 20

Bounce the ball off the right paddle
  ix = #pong/ball.x > (#pong/paddles.x{2} - 10)
  iy = (#pong/ball.y > (#pong/paddles.y{2} - 50)) & (#pong/ball.y < (#pong/paddles.y{2} + 50))
  #pong/ball.vx{ix & iy} := -#pong/ball.vx
  #pong/ball.x{ix & iy} := #pong/paddles.x{2} - 10