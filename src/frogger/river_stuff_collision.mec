## Check if Frogger is on any of the objects on the river
  #is-colliding = false

## Attach Frogger to the first log if he touches it
  ix = #frogger.x < (#log-1-data.x + #log-1-data.width) & (#frogger.x + #frogger.width) > #log-1-data.x
  iy = #frogger.y < (#log-1-data.y + #log-1-data.height) & (#frogger.y + #frogger.height) > #log-1-data.y
  #is-colliding{ix & iy} := true
  #frogger.vx{ix & iy} := #log-1-data.vx

## Attach Frogger to the second log if he touches it
  ix = #frogger.x < (#log-2-data.x + #log-2-data.width) & (#frogger.x + #frogger.width) > #log-2-data.x
  iy = #frogger.y < (#log-2-data.y + #log-2-data.height) & (#frogger.y + #frogger.height) > #log-2-data.y
  #is-colliding{ix & iy} := true
  #frogger.vx{ix & iy} := #log-2-data.vx

## Allow Frogger to move horizontally and vertically on the objects of the river
  ~ #html/event/key-down
  up = #html/event/key-up.key == "ArrowUp"
  down = #html/event/key-up.key == "ArrowDown"
  left = #html/event/key-down.key == "ArrowLeft"
  right = #html/event/key-down.key == "ArrowRight"
  #frogger.x{left & !up & !down & !right & #is-colliding} := #frogger.x - 50
  #frogger.x{right & !left & !up & !down & #is-colliding} := #frogger.x + 50
  #frogger.y{up & !down & !left & !right & #is-colliding} := #frogger.y - 50
  #frogger.y{down & !up & !left & !right & #is-colliding} := #frogger.y + 50

## Reset the collision boolean
  ~ #html/event/key-up
  up = #html/event/key-up.key == "ArrowUp"
  down = #html/event/key-up.key == "ArrowDown"
  left = #html/event/key-up.key == "ArrowLeft"
  right = #html/event/key-up.key == "ArrowRight"
  #is-colliding{(up | down | left | right) & #is-colliding} := false

## Reset Frogger if he is in the water
  #frogger.vx{#frogger.y < 260 & !#is-colliding} := 0
  #frogger.y{#frogger.y < 260 & !#is-colliding} := 610
